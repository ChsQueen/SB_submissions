/* Q1: Some of the facilities charge a fee to members, but some do not.
Please list the names of the facilities that do. */

SELECT name
FROM  `Facilities` 
WHERE membercost >0

/* Q2: How many facilities do not charge a fee to members? */

SELECT COUNT( * ) 
FROM  `Facilities` 
WHERE membercost =0

/* Q3: How can you produce a list of facilities that charge a fee to members,
where the fee is less than 20% of the facility's monthly maintenance cost?
Return the facid, facility name, member cost, and monthly maintenance of the
facilities in question. */

SELECT  `facid` ,  `name` ,  `membercost` ,  `monthlymaintenance` 
FROM  `Facilities` 
WHERE  `membercost` < 0.2 *  `monthlymaintenance` 
AND membercost > 0

/* Q4: How can you retrieve the details of facilities with ID 1 and 5?
Write the query without using the OR operator. */


SELECT * 
FROM  `Facilities` 
WHERE  `facid` 
IN ( 1, 5 ) 


/* Q5: How can you produce a list of facilities, with each labelled as
'cheap' or 'expensive', depending on if their monthly maintenance cost is
more than $100? Return the name and monthly maintenance of the facilities
in question. */


select name, monthlymaintenance, 
case when monthlymaintenance > 100 then 'expensive' else 'cheap' end as yup
from Facilities

/* Q6: You'd like to get the first and last name of the last member(s)
who signed up. Do not use the LIMIT clause for your solution. */

select max(joindate), firstname, surname from Members where memid != 0

/* Q7: How can you produce a list of all members who have used a tennis court?
Include in your output the name of the court, and the name of the member
formatted as a single column. Ensure no duplicate data, and order by
the member name. */

SELECT DISTINCT f.name, CONCAT( m.surname,  ',', m.firstname ) NAME
FROM  `Facilities` f,  `Bookings` b,  `Members` m
WHERE b.`facid` = f.`facid` 
AND b.memid = m.memid
AND name like 'Tennis%'
ORDER BY m.surname

/* Q8: How can you produce a list of bookings on the day of 2012-09-14 which
will cost the member (or guest) more than $30? Remember that guests have
different costs to members (the listed costs are per half-hour 'slot'), and
the guest user's ID is always 0. Include in your output the name of the
facility, the name of the member formatted as a single column, and the cost.
Order by descending cost, and do not use any subqueries. */


select f.name, concat(m.firstname, ' ', m.surname), f.membercost * b.slots as cost
from Bookings as b 
join Facilities as f on b.facid = f.facid 
join Members as m on b.memid = m.memid 
where f.membercost * b.slots > 30 and b.starttime like ('2012-09-14%') and b.memid != 0

union all

select f.name, concat(m.firstname, ' ', m.surname), f.guestcost * b.slots as cost
from Bookings as b 
join Facilities as f on b.facid = f.facid 
join Members as m on b.memid = m.memid 
where f.guestcost * b.slots > 30 and b.starttime like ('2012-09-14%') and b.memid = 0
order by cost desc

/* Q9: This time, produce the same result as in Q8, but using a subquery. */


select concat(sub.firstname, ' ', sub.surname), sub.name, sub.cost 
from (select f.name, m.firstname, m.surname, 
case when b.memid = 0
then f.guestcost * b.slots
else f.membercost * b.slots
end as cost
from Bookings as b
join Facilities f on b.facid = f.facid
join Members as m on b.memid = m.memid
WHERE b.starttime like ('2012-09-14%')
)sub
where cost > 30
order by cost desc

/* Q10: Produce a list of facilities with a total revenue less than 1000.
The output of facility name and total revenue, sorted by revenue. Remember
that there's a different cost for guests and members! */


select * from
(select f.name,
sum(case when b.memid = 0 then (b.slots * f.guestcost) else (b.slots * f.membercost) end) as TotalRevenue
from Bookings as b 
join Facilities as f
on f.facid = b.facid 
and b.memid = 0
group by f.name) col 
where TotalRevenue < 1000 
order by TotalRevenue desc 
